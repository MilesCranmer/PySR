import{_ as l,c as e,o as n,aA as t,j as s,a as i}from"./chunks/framework.CHSKrKFr.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"PySR","text":"Discover Mathematical Laws from Data","tagline":"High-performance symbolic regression in Python and Julia","actions":[{"theme":"brand","text":"Get Started","link":"/examples"},{"theme":"alt","text":"API Reference üìö","link":"/api"},{"theme":"alt","text":"View on GitHub","link":"https://github.com/MilesCranmer/PySR"}],"image":{"src":"https://ai.damtp.cam.ac.uk/symbolicregression/dev/logo.png","alt":"PySR"}},"features":[{"icon":"üî¨","title":"Interpretable By Design","details":"Discovers interpretable mathematical expressions instead of black-box models."},{"icon":"üöÄ","title":"Production Ready","details":"Years of development have produced mature, highly optimized parallel evolutionary algorithms."},{"icon":"üîß","title":"Extremely Customizable","details":"Customize everything: operators, loss functions, complexity, input types, optimizer, and more."},{"icon":"üêç","title":"Python Native","details":"Built for Python with Julia backend for maximum performance and ease of use."}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),h={name:"index.md"},r={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},p={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.687ex"},xmlns:"http://www.w3.org/2000/svg",width:"24.436ex",height:"2.573ex",role:"img",focusable:"false",viewBox:"0 -833.9 10800.7 1137.4","aria-hidden":"true"};function o(k,a,d,c,g,u){return n(),e("div",null,[a[4]||(a[4]=t(`<p>PySR searches for symbolic expressions which optimize a particular objective.</p><div align="center"><video width="800" height="600" controls><source src="https://github.com/MilesCranmer/PySR/assets/7593028/c8511a49-b408-488f-8f18-b1749078268f" type="video/mp4"></video></div><table><thead><tr><th align="center">Docs</th><th align="center">Forums</th><th align="center">Paper</th><th align="center">Colab Demo</th></tr></thead><tbody><tr><td align="center"><a href="https://ai.damtp.cam.ac.uk/pysr/"><img src="https://github.com/MilesCranmer/PySR/actions/workflows/docs.yml/badge.svg" alt="Documentation"></a></td><td align="center"><a href="https://github.com/MilesCranmer/PySR/discussions"><img src="https://img.shields.io/badge/discussions-github-informational" alt="Discussions"></a></td><td align="center"><a href="https://arxiv.org/abs/2305.01582"><img src="https://img.shields.io/badge/arXiv-2305.01582-b31b1b" alt="Paper"></a></td><td align="center"><a href="https://colab.research.google.com/github/MilesCranmer/PySR/blob/master/examples/pysr_demo.ipynb"><img src="https://img.shields.io/badge/colab-notebook-yellow" alt="Colab"></a></td></tr><tr><td align="center"><strong>Linux</strong></td><td align="center"><strong>Windows</strong></td><td align="center"><strong>macOS</strong></td></tr><tr><td align="center"><a href="https://github.com/MilesCranmer/PySR/actions/workflows/CI.yml"><img src="https://github.com/MilesCranmer/PySR/actions/workflows/CI.yml/badge.svg" alt="Linux"></a></td><td align="center"><a href="https://github.com/MilesCranmer/PySR/actions/workflows/CI_Windows.yml"><img src="https://github.com/MilesCranmer/PySR/actions/workflows/CI_Windows.yml/badge.svg" alt="Windows"></a></td><td align="center"><a href="https://github.com/MilesCranmer/PySR/actions/workflows/CI_mac.yml"><img src="https://github.com/MilesCranmer/PySR/actions/workflows/CI_mac.yml/badge.svg" alt="macOS"></a></td></tr><tr><td align="center"><strong>Docker</strong></td><td align="center"><strong>Conda</strong></td><td align="center"><strong>Coverage</strong></td></tr><tr><td align="center"><a href="https://github.com/MilesCranmer/PySR/actions/workflows/CI_docker.yml"><img src="https://github.com/MilesCranmer/PySR/actions/workflows/CI_docker.yml/badge.svg" alt="Docker"></a></td><td align="center"><a href="https://github.com/MilesCranmer/PySR/actions/workflows/CI_conda_forge.yml"><img src="https://github.com/MilesCranmer/PySR/actions/workflows/CI_conda_forge.yml/badge.svg" alt="conda-forge"></a></td><td align="center"><a href="https://codecov.io/gh/MilesCranmer/PySR"><img src="https://codecov.io/gh/MilesCranmer/PySR/branch/master/graph/badge.svg" alt="codecov"></a></td></tr></tbody></table><p>If you find PySR useful, please cite the paper <a href="https://arxiv.org/abs/2305.01582" target="_blank" rel="noreferrer">arXiv:2305.01582</a>. If you&#39;ve finished a project with PySR, please submit a PR to showcase your work on the <a href="/PySR/previews/PR1056/papers">research showcase page</a>!</p><h2 id="why-pysr" tabindex="-1">Why PySR? <a class="header-anchor" href="#why-pysr" aria-label="Permalink to &quot;Why PySR?&quot;">‚Äã</a></h2><p>PySR is an open-source tool for <em>Symbolic Regression</em>: a machine learning task where the goal is to find an interpretable symbolic expression that optimizes some objective.</p><p>Over a period of several years, PySR has been engineered from the ground up to be (1) as high-performance as possible, (2) as configurable as possible, and (3) easy to use. PySR is developed alongside the Julia library <a href="https://github.com/MilesCranmer/SymbolicRegression.jl" target="_blank" rel="noreferrer">SymbolicRegression.jl</a>, which forms the powerful search engine of PySR. The details of these algorithms are described in the <a href="https://arxiv.org/abs/2305.01582" target="_blank" rel="noreferrer">PySR paper</a>.</p><p>Symbolic regression works best on low-dimensional datasets, but one can also extend these approaches to higher-dimensional spaces by using &quot;<em>Symbolic Distillation</em>&quot; of Neural Networks, as explained in <a href="https://arxiv.org/abs/2006.11287" target="_blank" rel="noreferrer">2006.11287</a>, where we apply it to N-body problems. Here, one essentially uses symbolic regression to convert a neural net to an analytic equation. Thus, these tools simultaneously present an explicit and powerful way to interpret deep neural networks.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">‚Äã</a></h2><h3 id="pip" tabindex="-1">Pip <a class="header-anchor" href="#pip" aria-label="Permalink to &quot;Pip&quot;">‚Äã</a></h3><p>You can install PySR with pip:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pysr</span></span></code></pre></div><p>Julia dependencies will be installed at first import.</p><h3 id="conda" tabindex="-1">Conda <a class="header-anchor" href="#conda" aria-label="Permalink to &quot;Conda&quot;">‚Äã</a></h3><p>Similarly, with conda:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conda-forge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pysr</span></span></code></pre></div><details><summary><h3 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;Docker&quot;">‚Äã</a></h3></summary><p>You can also use the <code>Dockerfile</code> to install PySR in a docker container</p><ol><li>Clone this repo.</li><li>Within the repo&#39;s directory, build the docker container:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pysr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><ol start="3"><li>You can then start the container with an IPython execution with:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pysr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ipython</span></span></code></pre></div><p>For more details, see the <a href="#docker">docker section</a>.</p></details><details><summary><h3 id="apptainer" tabindex="-1">Apptainer <a class="header-anchor" href="#apptainer" aria-label="Permalink to &quot;Apptainer&quot;">‚Äã</a></h3></summary><p>If you are using PySR on a cluster where you do not have root access, you can use <a href="https://apptainer.org/" target="_blank" rel="noreferrer">Apptainer</a> to build a container instead of Docker. The <code>Apptainer.def</code> file is analogous to the <code>Dockerfile</code>, and can be built with:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apptainer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --notest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pysr.sif</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Apptainer.def</span></span></code></pre></div><p>and launched with</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apptainer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pysr.sif</span></span></code></pre></div></details><details><summary><h3 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">‚Äã</a></h3></summary><p>One issue you might run into can result in a hard crash at import with a message like &quot;<code>GLIBCXX_...</code> not found&quot;. This is due to another one of the Python dependencies loading an incorrect <code>libstdc++</code> library. To fix this, you should modify your <code>LD_LIBRARY_PATH</code> variable to reference the Julia libraries. For example, if the Julia version of <code>libstdc++.so</code> is located in <code>$HOME/.julia/juliaup/julia-1.10.0+0.x64.linux.gnu/lib/julia/</code> (which likely differs on your system!), you could add:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>export LD_LIBRARY_PATH=$HOME/.julia/juliaup/julia-1.10.0+0.x64.linux.gnu/lib/julia/:$LD_LIBRARY_PATH</span></span></code></pre></div><p>to your <code>.bashrc</code> or <code>.zshrc</code> file.</p></details><h2 id="quickstart" tabindex="-1">Quickstart <a class="header-anchor" href="#quickstart" aria-label="Permalink to &quot;Quickstart&quot;">‚Äã</a></h2><p>You might wish to try the interactive tutorial <a href="https://colab.research.google.com/github/MilesCranmer/PySR/blob/master/examples/pysr_demo.ipynb" target="_blank" rel="noreferrer">here</a>, which uses the notebook in <code>examples/pysr_demo.ipynb</code>.</p><p>In practice, I highly recommend using IPython rather than Jupyter, as the printing is much nicer. Below is a quick demo here which you can paste into a Python runtime. First, let&#39;s import numpy to generate some test data:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np.random.randn(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.5382</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np.cos(X[:, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X[:, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span></span></code></pre></div>`,23)),s("p",null,[a[2]||(a[2]=i("We have created a dataset with 100 datapoints, with 5 features each. The relation we wish to model is ",-1)),s("mjx-container",r,[(n(),e("svg",p,[...a[0]||(a[0]=[t('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(778,0)" style="stroke-width:3;"></path><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" transform="translate(1278,0)" style="stroke-width:3;"></path><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z" transform="translate(1778,0)" style="stroke-width:3;"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(2278,0)" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2944.7,0)"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" style="stroke-width:3;"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)" style="stroke-width:3;"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(944,0)" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4282.7,0)"><path data-c="2061" d="" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4282.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(4671.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(5680.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(6291.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msubsup" transform="translate(7291.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(605,-287.9) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(8522.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(9522.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width:3;"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(778,0)" style="stroke-width:3;"></path></g></g></g>',1)])])),a[1]||(a[1]=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"2.5382"),s("mi",null,"cos"),s("mo",{"data-mjx-texclass":"NONE"},"‚Å°"),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"x"),s("mn",null,"3")]),s("mo",{stretchy:"false"},")"),s("mo",null,"+"),s("msubsup",null,[s("mi",null,"x"),s("mn",null,"0"),s("mn",null,"2")]),s("mo",null,"‚àí"),s("mn",null,"0.5")])],-1))]),a[3]||(a[3]=i(".",-1))]),a[5]||(a[5]=t(`<p>Now, let&#39;s create a PySR model and train it. PySR&#39;s main interface is in the style of scikit-learn:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pysr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PySRRegressor</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PySRRegressor(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    maxsize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    niterations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt; Increase me for better results</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    binary_operators</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;+&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    unary_operators</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;cos&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;exp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;sin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;inv(x) = 1/x&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # ^ Custom operator (julia syntax)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    extra_sympy_mappings</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;inv&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">lambda</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Define operator for SymPy as well</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    elementwise_loss</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;loss(prediction, target) = (prediction - target)^2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Custom loss function (julia syntax)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>This will set up the model for 40 iterations of the search code, which contains hundreds of thousands of mutations and equation evaluations.</p><p>Let&#39;s train this model on our dataset:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model.fit(X, y)</span></span></code></pre></div><p>Internally, this launches a Julia process which will do a multithreaded search for equations to fit the dataset.</p><p>Equations will be printed during training, and once you are satisfied, you may quit early by hitting &#39;q&#39; and then &lt;enter&gt;.</p><p>After the model has been fit, you can run <code>model.predict(X)</code> to see the predictions on a given dataset using the automatically-selected expression, or, for example, <code>model.predict(X, 3)</code> to see the predictions of the 3rd equation.</p><p>You may run:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model)</span></span></code></pre></div><p>to print the learned equations:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PySRRegressor.equations_ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	   pick     score                                           equation       loss  complexity</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        0.000000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                          4.4324794</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  42.354317</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           1</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        1.255691</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                          (x0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x0)   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.437307</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           3</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        0.011629</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                          ((x0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x0) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.28087974</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.358285</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           5</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        0.897855</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                              ((x0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x0) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cos(x3))   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.368308</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           6</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        0.857018</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                ((x0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x0) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cos(x3) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.4566472</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.246483</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           8</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  &gt;&gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       inf  (((cos(x3) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.19699033</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.5382123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   0.000000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>This arrow in the <code>pick</code> column indicates which equation is currently selected by your <code>model_selection</code> strategy for prediction. (You may change <code>model_selection</code> after <code>.fit(X, y)</code> as well.)</p><p><code>model.equations_</code> is a pandas DataFrame containing all equations, including callable format (<code>lambda_format</code>), SymPy format (<code>sympy_format</code> - which you can also get with <code>model.sympy()</code>), and even JAX and PyTorch format (both of which are differentiable - which you can get with <code>model.jax()</code> and <code>model.pytorch()</code>).</p><p>Note that <code>PySRRegressor</code> stores the state of the last search, and will restart from where you left off the next time you call <code>.fit()</code>, assuming you have set <code>warm_start=True</code>. This will cause problems if significant changes are made to the search parameters (like changing the operators). You can run <code>model.reset()</code> to reset the state.</p><p>You will notice that PySR will save two files: <code>hall_of_fame...csv</code> and <code>hall_of_fame...pkl</code>. The csv file is a list of equations and their losses, and the pkl file is a saved state of the model. You may load the model from the <code>pkl</code> file with:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PySRRegressor.from_file(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hall_of_fame.2022-08-10_100832.281.pkl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>There are several other useful features such as denoising (e.g., <code>denoise=True</code>), feature selection (e.g., <code>select_k_features=3</code>). For examples of these and other features, see the <a href="https://ai.damtp.cam.ac.uk/pysr/examples" target="_blank" rel="noreferrer">examples page</a>. For a detailed look at more options, see the <a href="https://ai.damtp.cam.ac.uk/pysr/options" target="_blank" rel="noreferrer">options page</a>. You can also see the full API at <a href="https://ai.damtp.cam.ac.uk/pysr/api" target="_blank" rel="noreferrer">this page</a>. There are also tips for tuning PySR on <a href="https://ai.damtp.cam.ac.uk/pysr/tuning" target="_blank" rel="noreferrer">this page</a>.</p><h3 id="detailed-example" tabindex="-1">Detailed Example <a class="header-anchor" href="#detailed-example" aria-label="Permalink to &quot;Detailed Example&quot;">‚Äã</a></h3><p>The following code makes use of as many PySR features as possible. Note that is just a demonstration of features and you should not use this example as-is. For details on what each parameter does, check out the <a href="https://ai.damtp.cam.ac.uk/pysr/api/" target="_blank" rel="noreferrer">API page</a>.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PySRRegressor(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    populations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Assuming we have 4 cores, this means 2 populations per core, so one is always running.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    population_size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Slightly larger populations, for greater diversity.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    ncycles_per_iteration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Generations between migrations.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    niterations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run forever</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    early_stop_condition</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;stop_if(loss, complexity) = loss &lt; 1e-6 &amp;&amp; complexity &lt; 10&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Stop early if we find a good and simple equation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    timeout_in_seconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Alternatively, stop after 24 hours have passed.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    maxsize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Allow greater complexity.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    maxdepth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ But, avoid deep nesting.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    binary_operators</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;+&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    unary_operators</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;square&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cube&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;exp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cos2(x)=cos(x)^2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    constraints</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;square&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;cube&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;exp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Limit the complexity within each argument.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # &quot;inv&quot;: (-1, 9) states that the numerator has no constraint,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # but the denominator has a max complexity of 9.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # &quot;exp&quot;: 9 simply states that \`exp\` can only have</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # an expression of complexity 9 as input.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    nested_constraints</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;square&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;square&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cube&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;exp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;cube&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;square&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cube&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;exp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;exp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;square&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cube&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;exp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Nesting constraints on operators. For example,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # &quot;square(exp(x))&quot; is not allowed, since &quot;square&quot;: {&quot;exp&quot;: 0}.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    complexity_of_operators</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;exp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Custom complexity of particular operators.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    complexity_of_constants</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Punish constants more than variables</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    select_k_features</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Train on only the 4 most important features</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    progress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Can set to false if printing to a file.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    weight_randomize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Randomize the tree much more frequently</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    cluster_manager</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Can be set to, e.g., &quot;slurm&quot;, to run a slurm</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # cluster. Just launch one script from the head node.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    precision</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Higher precision calculations.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    warm_start</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Start from where left off.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    turbo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Faster evaluation (experimental)</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    extra_sympy_mappings</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cos2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">lambda</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x: sympy.cos(x)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # extra_torch_mappings={sympy.cos: torch.cos},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ Not needed as cos already defined, but this</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # is how you define custom torch operators.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # extra_jax_mappings={sympy.cos: &quot;jnp.cos&quot;},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ^ For JAX, one passes a string.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="docker-1" tabindex="-1">Docker <a class="header-anchor" href="#docker-1" aria-label="Permalink to &quot;Docker&quot;">‚Äã</a></h3><p>You can also test out PySR in Docker, without installing it locally, by running the following command in the root directory of this repo:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pysr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p>This builds an image called <code>pysr</code> for your system&#39;s architecture, which also contains IPython. You can select a specific version of Python and Julia with:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pysr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build-arg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> JLVERSION=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.10.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build-arg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PYVERSION=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.11.6</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p>You can then run with this dockerfile using:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PWD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:/data&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pysr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ipython</span></span></code></pre></div><p>which will link the current directory to the container&#39;s <code>/data</code> directory and then launch ipython.</p><p>If you have issues building for your system&#39;s architecture, you can emulate another architecture by including <code>--platform linux/amd64</code>, before the <code>build</code> and <code>run</code> commands.</p><div align="center"><h3 id="contributors-‚ú®" tabindex="-1">Contributors ‚ú® <a class="header-anchor" href="#contributors-‚ú®" aria-label="Permalink to &quot;Contributors ‚ú®&quot;">‚Äã</a></h3></div><p>We are eager to welcome new contributors! Check out our contributors <a href="https://github.com/MilesCranmer/PySR/blob/master/CONTRIBUTORS.md" target="_blank" rel="noreferrer">guide</a> for tips üöÄ. If you have an idea for a new feature, don&#39;t hesitate to share it on the <a href="https://github.com/MilesCranmer/PySR/issues" target="_blank" rel="noreferrer">issues</a> or <a href="https://github.com/MilesCranmer/PySR/discussions" target="_blank" rel="noreferrer">discussions</a> page.</p>`,32)),a[6]||(a[6]=s("table",null,[s("tbody",null,[s("tr",null,[s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://www.linkedin.com/in/markkittisopikul/"},[s("img",{src:"https://avatars.githubusercontent.com/u/8062771?v=4?s=50",width:"50px;",alt:"Mark Kittisopikul"}),s("br"),s("sub",null,[s("b",null,"Mark Kittisopikul")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=mkitti",title:"Code"},"üíª"),i(),s("a",{href:"#ideas-mkitti",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#infra-mkitti",title:"Infrastructure (Hosting, Build-Tools, etc)"},"üöá"),i(),s("a",{href:"#platform-mkitti",title:"Packaging/porting to new platform"},"üì¶"),i(),s("a",{href:"#promotion-mkitti",title:"Promotion"},"üì£"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Amkitti",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#tool-mkitti",title:"Tools"},"üîß"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=mkitti",title:"Tests"},"‚ö†Ô∏è")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/tttc3"},[s("img",{src:"https://avatars.githubusercontent.com/u/97948946?v=4?s=50",width:"50px;",alt:"T Coxon"}),s("br"),s("sub",null,[s("b",null,"T Coxon")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3Atttc3",title:"Bug reports"},"üêõ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=tttc3",title:"Code"},"üíª"),i(),s("a",{href:"#plugin-tttc3",title:"Plugin/utility libraries"},"üîå"),i(),s("a",{href:"#ideas-tttc3",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#infra-tttc3",title:"Infrastructure (Hosting, Build-Tools, etc)"},"üöá"),i(),s("a",{href:"#maintenance-tttc3",title:"Maintenance"},"üöß"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Atttc3",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#tool-tttc3",title:"Tools"},"üîß"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=tttc3",title:"Tests"},"‚ö†Ô∏è"),i(),s("a",{href:"#userTesting-tttc3",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/DhananjayAshok"},[s("img",{src:"https://avatars.githubusercontent.com/u/46792537?v=4?s=50",width:"50px;",alt:"Dhananjay Ashok"}),s("br"),s("sub",null,[s("b",null,"Dhananjay Ashok")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=DhananjayAshok",title:"Code"},"üíª"),i(),s("a",{href:"#example-DhananjayAshok",title:"Examples."},"üåç"),i(),s("a",{href:"#ideas-DhananjayAshok",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#maintenance-DhananjayAshok",title:"Maintenance"},"üöß"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=DhananjayAshok",title:"Tests"},"‚ö†Ô∏è")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://gitlab.com/johanbluecreek"},[s("img",{src:"https://avatars.githubusercontent.com/u/852554?v=4?s=50",width:"50px;",alt:"Johan Bl√•b√§ck"}),s("br"),s("sub",null,[s("b",null,"Johan Bl√•b√§ck")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3Ajohanbluecreek",title:"Bug reports"},"üêõ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=johanbluecreek",title:"Code"},"üíª"),i(),s("a",{href:"#ideas-johanbluecreek",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#maintenance-johanbluecreek",title:"Maintenance"},"üöß"),i(),s("a",{href:"#promotion-johanbluecreek",title:"Promotion"},"üì£"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Ajohanbluecreek",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=johanbluecreek",title:"Tests"},"‚ö†Ô∏è"),i(),s("a",{href:"#userTesting-johanbluecreek",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://mathopt.de/people/martensen/index.php"},[s("img",{src:"https://avatars.githubusercontent.com/u/20998300?v=4?s=50",width:"50px;",alt:"JuliusMartensen"}),s("br"),s("sub",null,[s("b",null,"JuliusMartensen")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3AAlCap23",title:"Bug reports"},"üêõ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=AlCap23",title:"Code"},"üíª"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=AlCap23",title:"Documentation"},"üìñ"),i(),s("a",{href:"#plugin-AlCap23",title:"Plugin/utility libraries"},"üîå"),i(),s("a",{href:"#ideas-AlCap23",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#infra-AlCap23",title:"Infrastructure (Hosting, Build-Tools, etc)"},"üöá"),i(),s("a",{href:"#maintenance-AlCap23",title:"Maintenance"},"üöß"),i(),s("a",{href:"#platform-AlCap23",title:"Packaging/porting to new platform"},"üì¶"),i(),s("a",{href:"#promotion-AlCap23",title:"Promotion"},"üì£"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3AAlCap23",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#tool-AlCap23",title:"Tools"},"üîß"),i(),s("a",{href:"#userTesting-AlCap23",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/ngam"},[s("img",{src:"https://avatars.githubusercontent.com/u/67342040?v=4?s=50",width:"50px;",alt:"ngam"}),s("br"),s("sub",null,[s("b",null,"ngam")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=ngam",title:"Code"},"üíª"),i(),s("a",{href:"#infra-ngam",title:"Infrastructure (Hosting, Build-Tools, etc)"},"üöá"),i(),s("a",{href:"#platform-ngam",title:"Packaging/porting to new platform"},"üì¶"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Angam",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#tool-ngam",title:"Tools"},"üîß"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=ngam",title:"Tests"},"‚ö†Ô∏è")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://cjdoris.github.io/"},[s("img",{src:"https://avatars.githubusercontent.com/u/1844215?v=4?s=50",width:"50px;",alt:"Christopher Rowley"}),s("br"),s("sub",null,[s("b",null,"Christopher Rowley")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=cjdoris",title:"Code"},"üíª"),i(),s("a",{href:"#ideas-cjdoris",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#infra-cjdoris",title:"Infrastructure (Hosting, Build-Tools, etc)"},"üöá"),i(),s("a",{href:"#platform-cjdoris",title:"Packaging/porting to new platform"},"üì¶"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Acjdoris",title:"Reviewed Pull Requests"},"üëÄ")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/kazewong"},[s("img",{src:"https://avatars.githubusercontent.com/u/8803931?v=4?s=50",width:"50px;",alt:"Kaze Wong"}),s("br"),s("sub",null,[s("b",null,"Kaze Wong")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3Akazewong",title:"Bug reports"},"üêõ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=kazewong",title:"Code"},"üíª"),i(),s("a",{href:"#ideas-kazewong",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#infra-kazewong",title:"Infrastructure (Hosting, Build-Tools, etc)"},"üöá"),i(),s("a",{href:"#maintenance-kazewong",title:"Maintenance"},"üöß"),i(),s("a",{href:"#promotion-kazewong",title:"Promotion"},"üì£"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Akazewong",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#research-kazewong",title:"Research"},"üî¨"),i(),s("a",{href:"#userTesting-kazewong",title:"User Testing"},"üìì")])]),s("tr",null,[s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/ChrisRackauckas"},[s("img",{src:"https://avatars.githubusercontent.com/u/1814174?v=4?s=50",width:"50px;",alt:"Christopher Rackauckas"}),s("br"),s("sub",null,[s("b",null,"Christopher Rackauckas")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3AChrisRackauckas",title:"Bug reports"},"üêõ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=ChrisRackauckas",title:"Code"},"üíª"),i(),s("a",{href:"#plugin-ChrisRackauckas",title:"Plugin/utility libraries"},"üîå"),i(),s("a",{href:"#ideas-ChrisRackauckas",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#infra-ChrisRackauckas",title:"Infrastructure (Hosting, Build-Tools, etc)"},"üöá"),i(),s("a",{href:"#promotion-ChrisRackauckas",title:"Promotion"},"üì£"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3AChrisRackauckas",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#research-ChrisRackauckas",title:"Research"},"üî¨"),i(),s("a",{href:"#tool-ChrisRackauckas",title:"Tools"},"üîß"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=ChrisRackauckas",title:"Tests"},"‚ö†Ô∏è"),i(),s("a",{href:"#userTesting-ChrisRackauckas",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://kidger.site/"},[s("img",{src:"https://avatars.githubusercontent.com/u/33688385?v=4?s=50",width:"50px;",alt:"Patrick Kidger"}),s("br"),s("sub",null,[s("b",null,"Patrick Kidger")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3Apatrick-kidger",title:"Bug reports"},"üêõ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=patrick-kidger",title:"Code"},"üíª"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=patrick-kidger",title:"Documentation"},"üìñ"),i(),s("a",{href:"#plugin-patrick-kidger",title:"Plugin/utility libraries"},"üîå"),i(),s("a",{href:"#ideas-patrick-kidger",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#maintenance-patrick-kidger",title:"Maintenance"},"üöß"),i(),s("a",{href:"#promotion-patrick-kidger",title:"Promotion"},"üì£"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Apatrick-kidger",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#research-patrick-kidger",title:"Research"},"üî¨"),i(),s("a",{href:"#tool-patrick-kidger",title:"Tools"},"üîß"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=patrick-kidger",title:"Tests"},"‚ö†Ô∏è"),i(),s("a",{href:"#userTesting-patrick-kidger",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/OkonSamuel"},[s("img",{src:"https://avatars.githubusercontent.com/u/39421418?v=4?s=50",width:"50px;",alt:"Okon Samuel"}),s("br"),s("sub",null,[s("b",null,"Okon Samuel")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3AOkonSamuel",title:"Bug reports"},"üêõ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=OkonSamuel",title:"Code"},"üíª"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=OkonSamuel",title:"Documentation"},"üìñ"),i(),s("a",{href:"#maintenance-OkonSamuel",title:"Maintenance"},"üöß"),i(),s("a",{href:"#ideas-OkonSamuel",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#infra-OkonSamuel",title:"Infrastructure (Hosting, Build-Tools, etc)"},"üöá"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3AOkonSamuel",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=OkonSamuel",title:"Tests"},"‚ö†Ô∏è"),i(),s("a",{href:"#userTesting-OkonSamuel",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/w2ll2am"},[s("img",{src:"https://avatars.githubusercontent.com/u/16038228?v=4?s=50",width:"50px;",alt:"William Booth-Clibborn"}),s("br"),s("sub",null,[s("b",null,"William Booth-Clibborn")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=w2ll2am",title:"Code"},"üíª"),i(),s("a",{href:"#example-w2ll2am",title:"Examples."},"üåç"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=w2ll2am",title:"Documentation"},"üìñ"),i(),s("a",{href:"#userTesting-w2ll2am",title:"User Testing"},"üìì"),i(),s("a",{href:"#maintenance-w2ll2am",title:"Maintenance"},"üöß"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Aw2ll2am",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#tool-w2ll2am",title:"Tools"},"üîß"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=w2ll2am",title:"Tests"},"‚ö†Ô∏è")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://pablo-lemos.github.io/"},[s("img",{src:"https://avatars.githubusercontent.com/u/38078898?v=4?s=50",width:"50px;",alt:"Pablo Lemos"}),s("br"),s("sub",null,[s("b",null,"Pablo Lemos")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3APablo-Lemos",title:"Bug reports"},"üêõ"),i(),s("a",{href:"#ideas-Pablo-Lemos",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#promotion-Pablo-Lemos",title:"Promotion"},"üì£"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3APablo-Lemos",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#research-Pablo-Lemos",title:"Research"},"üî¨"),i(),s("a",{href:"#userTesting-Pablo-Lemos",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/Moelf"},[s("img",{src:"https://avatars.githubusercontent.com/u/5306213?v=4?s=50",width:"50px;",alt:"Jerry Ling"}),s("br"),s("sub",null,[s("b",null,"Jerry Ling")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3AMoelf",title:"Bug reports"},"üêõ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=Moelf",title:"Code"},"üíª"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=Moelf",title:"Documentation"},"üìñ"),i(),s("a",{href:"#example-Moelf",title:"Examples."},"üåç"),i(),s("a",{href:"#ideas-Moelf",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#promotion-Moelf",title:"Promotion"},"üì£"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3AMoelf",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#userTesting-Moelf",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/CharFox1"},[s("img",{src:"https://avatars.githubusercontent.com/u/35052672?v=4?s=50",width:"50px;",alt:"Charles Fox"}),s("br"),s("sub",null,[s("b",null,"Charles Fox")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3ACharFox1",title:"Bug reports"},"üêõ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=CharFox1",title:"Code"},"üíª"),i(),s("a",{href:"#ideas-CharFox1",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#maintenance-CharFox1",title:"Maintenance"},"üöß"),i(),s("a",{href:"#promotion-CharFox1",title:"Promotion"},"üì£"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3ACharFox1",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#research-CharFox1",title:"Research"},"üî¨"),i(),s("a",{href:"#userTesting-CharFox1",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/johannbrehmer"},[s("img",{src:"https://avatars.githubusercontent.com/u/17068560?v=4?s=50",width:"50px;",alt:"Johann Brehmer"}),s("br"),s("sub",null,[s("b",null,"Johann Brehmer")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=johannbrehmer",title:"Code"},"üíª"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=johannbrehmer",title:"Documentation"},"üìñ"),i(),s("a",{href:"#ideas-johannbrehmer",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#promotion-johannbrehmer",title:"Promotion"},"üì£"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Ajohannbrehmer",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#research-johannbrehmer",title:"Research"},"üî¨"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=johannbrehmer",title:"Tests"},"‚ö†Ô∏è"),i(),s("a",{href:"#userTesting-johannbrehmer",title:"User Testing"},"üìì")])]),s("tr",null,[s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"http://www.cosmicmar.com/"},[s("img",{src:"https://avatars.githubusercontent.com/u/1510968?v=4?s=50",width:"50px;",alt:"Marius Millea"}),s("br"),s("sub",null,[s("b",null,"Marius Millea")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=marius311",title:"Code"},"üíª"),i(),s("a",{href:"#ideas-marius311",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#promotion-marius311",title:"Promotion"},"üì£"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Amarius311",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#userTesting-marius311",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://gitlab.com/cobac"},[s("img",{src:"https://avatars.githubusercontent.com/u/27872944?v=4?s=50",width:"50px;",alt:"Coba"}),s("br"),s("sub",null,[s("b",null,"Coba")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3Acobac",title:"Bug reports"},"üêõ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=cobac",title:"Code"},"üíª"),i(),s("a",{href:"#ideas-cobac",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Acobac",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#userTesting-cobac",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/foxtran"},[s("img",{src:"https://avatars.githubusercontent.com/u/39676482?v=4?s=50",width:"50px;",alt:"foxtran"}),s("br"),s("sub",null,[s("b",null,"foxtran")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=foxtran",title:"Code"},"üíª"),i(),s("a",{href:"#ideas-foxtran",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#maintenance-foxtran",title:"Maintenance"},"üöß"),i(),s("a",{href:"#tool-foxtran",title:"Tools"},"üîß"),i(),s("a",{href:"#userTesting-foxtran",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://smhasan.com/"},[s("img",{src:"https://avatars.githubusercontent.com/u/36223598?v=4?s=50",width:"50px;",alt:"Shah Mahdi Hasan "}),s("br"),s("sub",null,[s("b",null,"Shah Mahdi Hasan ")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3Atanweer-mahdi",title:"Bug reports"},"üêõ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=tanweer-mahdi",title:"Code"},"üíª"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Atanweer-mahdi",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#userTesting-tanweer-mahdi",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/pitmonticone"},[s("img",{src:"https://avatars.githubusercontent.com/u/38562595?v=4?s=50",width:"50px;",alt:"Pietro Monticone"}),s("br"),s("sub",null,[s("b",null,"Pietro Monticone")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3Apitmonticone",title:"Bug reports"},"üêõ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=pitmonticone",title:"Documentation"},"üìñ"),i(),s("a",{href:"#ideas-pitmonticone",title:"Ideas, planning, and feedback."},"üí°")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/sheevy"},[s("img",{src:"https://avatars.githubusercontent.com/u/1525683?v=4?s=50",width:"50px;",alt:"Mateusz Kubica"}),s("br"),s("sub",null,[s("b",null,"Mateusz Kubica")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=sheevy",title:"Documentation"},"üìñ"),i(),s("a",{href:"#ideas-sheevy",title:"Ideas, planning, and feedback."},"üí°")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://jaywadekar.github.io/"},[s("img",{src:"https://avatars.githubusercontent.com/u/5493388?v=4?s=50",width:"50px;",alt:"Jay Wadekar"}),s("br"),s("sub",null,[s("b",null,"Jay Wadekar")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3AJayWadekar",title:"Bug reports"},"üêõ"),i(),s("a",{href:"#ideas-JayWadekar",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#promotion-JayWadekar",title:"Promotion"},"üì£"),i(),s("a",{href:"#research-JayWadekar",title:"Research"},"üî¨")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/ablaom"},[s("img",{src:"https://avatars.githubusercontent.com/u/30517088?v=4?s=50",width:"50px;",alt:"Anthony Blaom, PhD"}),s("br"),s("sub",null,[s("b",null,"Anthony Blaom, PhD")])]),s("br"),s("a",{href:"#infra-ablaom",title:"Infrastructure (Hosting, Build-Tools, etc)"},"üöá"),i(),s("a",{href:"#ideas-ablaom",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Aablaom",title:"Reviewed Pull Requests"},"üëÄ")])]),s("tr",null,[s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/Jgmedina95"},[s("img",{src:"https://avatars.githubusercontent.com/u/97254349?v=4?s=50",width:"50px;",alt:"Jgmedina95"}),s("br"),s("sub",null,[s("b",null,"Jgmedina95")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3AJgmedina95",title:"Bug reports"},"üêõ"),i(),s("a",{href:"#ideas-Jgmedina95",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3AJgmedina95",title:"Reviewed Pull Requests"},"üëÄ")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/mcabbott"},[s("img",{src:"https://avatars.githubusercontent.com/u/32575566?v=4?s=50",width:"50px;",alt:"Michael Abbott"}),s("br"),s("sub",null,[s("b",null,"Michael Abbott")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=mcabbott",title:"Code"},"üíª"),i(),s("a",{href:"#ideas-mcabbott",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Amcabbott",title:"Reviewed Pull Requests"},"üëÄ"),i(),s("a",{href:"#tool-mcabbott",title:"Tools"},"üîß")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/oscardssmith"},[s("img",{src:"https://avatars.githubusercontent.com/u/11729272?v=4?s=50",width:"50px;",alt:"Oscar Smith"}),s("br"),s("sub",null,[s("b",null,"Oscar Smith")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=oscardssmith",title:"Code"},"üíª"),i(),s("a",{href:"#ideas-oscardssmith",title:"Ideas, planning, and feedback."},"üí°")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://ericphanson.com/"},[s("img",{src:"https://avatars.githubusercontent.com/u/5846501?v=4?s=50",width:"50px;",alt:"Eric Hanson"}),s("br"),s("sub",null,[s("b",null,"Eric Hanson")])]),s("br"),s("a",{href:"#ideas-ericphanson",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#promotion-ericphanson",title:"Promotion"},"üì£"),i(),s("a",{href:"#userTesting-ericphanson",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/henriquebecker91"},[s("img",{src:"https://avatars.githubusercontent.com/u/14113435?v=4?s=50",width:"50px;",alt:"Henrique Becker"}),s("br"),s("sub",null,[s("b",null,"Henrique Becker")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=henriquebecker91",title:"Code"},"üíª"),i(),s("a",{href:"#ideas-henriquebecker91",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/pulls?q=is%3Apr+reviewed-by%3Ahenriquebecker91",title:"Reviewed Pull Requests"},"üëÄ")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/qwertyjl"},[s("img",{src:"https://avatars.githubusercontent.com/u/110912592?v=4?s=50",width:"50px;",alt:"qwertyjl"}),s("br"),s("sub",null,[s("b",null,"qwertyjl")])]),s("br"),s("a",{href:"https://github.com/MilesCranmer/PySR/issues?q=author%3Aqwertyjl",title:"Bug reports"},"üêõ"),i(),s("a",{href:"https://github.com/MilesCranmer/PySR/commits?author=qwertyjl",title:"Documentation"},"üìñ"),i(),s("a",{href:"#ideas-qwertyjl",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#userTesting-qwertyjl",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://huijzer.xyz/"},[s("img",{src:"https://avatars.githubusercontent.com/u/20724914?v=4?s=50",width:"50px;",alt:"Rik Huijzer"}),s("br"),s("sub",null,[s("b",null,"Rik Huijzer")])]),s("br"),s("a",{href:"#ideas-rikhuijzer",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#infra-rikhuijzer",title:"Infrastructure (Hosting, Build-Tools, etc)"},"üöá")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/GCaptainNemo"},[s("img",{src:"https://avatars.githubusercontent.com/u/43086239?v=4?s=50",width:"50px;",alt:"Hongyu Wang"}),s("br"),s("sub",null,[s("b",null,"Hongyu Wang")])]),s("br"),s("a",{href:"#ideas-GCaptainNemo",title:"Ideas, planning, and feedback."},"üí°"),i(),s("a",{href:"#promotion-GCaptainNemo",title:"Promotion"},"üì£"),i(),s("a",{href:"#research-GCaptainNemo",title:"Research"},"üî¨")])]),s("tr",null,[s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/ZehaoJin"},[s("img",{src:"https://avatars.githubusercontent.com/u/50961376?v=4?s=50",width:"50px;",alt:"Zehao Jin"}),s("br"),s("sub",null,[s("b",null,"Zehao Jin")])]),s("br"),s("a",{href:"#research-ZehaoJin",title:"Research"},"üî¨"),i(),s("a",{href:"#promotion-ZehaoJin",title:"Promotion"},"üì£")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/tmengel"},[s("img",{src:"https://avatars.githubusercontent.com/u/38924390?v=4?s=50",width:"50px;",alt:"Tanner Mengel"}),s("br"),s("sub",null,[s("b",null,"Tanner Mengel")])]),s("br"),s("a",{href:"#research-tmengel",title:"Research"},"üî¨"),i(),s("a",{href:"#promotion-tmengel",title:"Promotion"},"üì£")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/agrundner24"},[s("img",{src:"https://avatars.githubusercontent.com/u/38557656?v=4?s=50",width:"50px;",alt:"Arthur Grundner"}),s("br"),s("sub",null,[s("b",null,"Arthur Grundner")])]),s("br"),s("a",{href:"#research-agrundner24",title:"Research"},"üî¨"),i(),s("a",{href:"#promotion-agrundner24",title:"Promotion"},"üì£")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://github.com/sjwetzel"},[s("img",{src:"https://avatars.githubusercontent.com/u/24393721?v=4?s=50",width:"50px;",alt:"sjwetzel"}),s("br"),s("sub",null,[s("b",null,"sjwetzel")])]),s("br"),s("a",{href:"#research-sjwetzel",title:"Research"},"üî¨"),i(),s("a",{href:"#promotion-sjwetzel",title:"Promotion"},"üì£"),i(),s("a",{href:"#userTesting-sjwetzel",title:"User Testing"},"üìì")]),s("td",{align:"center",valign:"top",width:"12.5%"},[s("a",{href:"https://sauravmaheshkar.github.io/"},[s("img",{src:"https://avatars.githubusercontent.com/u/61241031?v=4?s=50",width:"50px;",alt:"Saurav Maheshkar"}),s("br"),s("sub",null,[s("b",null,"Saurav Maheshkar")])]),s("br"),s("a",{href:"#tool-SauravMaheshkar",title:"Tools"},"üîß")])])])],-1))])}const b=l(h,[["render",o]]);export{y as __pageData,b as default};
